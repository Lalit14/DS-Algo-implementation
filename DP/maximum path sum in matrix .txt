
    int maximumPath(int N, vector<vector<int>> grid)
    {
        int dp[N][N];
        for(int i=0;i<N;i++){
            dp[0][i]=grid[0][i];
        }
        for(int i=1;i<N;i++){
            for(int j=0;j<N;j++){
                if(j==0 && j+1<N)
                    dp[i][j]=grid[i][j]+max(grid[i-1][j],grid[i-1][j+1]);
                else if(j-1>=0 && j==N-1)
                    dp[i][j]=grid[i][j]+max(grid[i-1][j],grid[i-1][j-1]);
                else if(j>0 && j+1<N)
                    dp[i][j]=grid[i][j]+max(grid[i-1][j],max(grid[i-1][j-1],grid[i-1][j+1]));
                else
                    dp[i][j] = grid[i][j] + dp[i-1][j];
                    
            }
        }
          
          int maxx=0;
          for(int i=0;i<N;i++){
            maxx=max(dp[N-1][i],maxx);
          }
          
          return maxx;
      
    }