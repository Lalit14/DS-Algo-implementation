bool cmp(struct val p1,struct val p2)
{
	if(p1.first<p2.first)
	return 1;
	else if(p1.first==p2.first and p1.second<p2.second)
	return 1;
	return 0;
}


int maxChainLen(struct val p[],int n)
{   int dp[n];
    int omax=0;
    for(int i=0;i<n;i++){
        dp[i]=1;
    }
    sort(p,p+n,cmp);
    for(int i=1;i<n;i++){
    for(int j=0;j<i;j++){
        if(p[i].first>p[j].second && dp[i]<dp[j]+1){
            dp[i]=dp[j]+1;
        }
    }
    
}
         int max=0;
         for(int i = 0;i<n;i++)
	    {
	        if(dp[i] > max)
	            max = dp[i];
	    }
return max;
}

INPUT:
N = 5
P[] = {5  24 , 39 60 , 15 28 , 27 40 , 50 90}
OUTPUT : 3