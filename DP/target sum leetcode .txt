 
int findTargetSumWays(vector<int>& nums, int S) {
      int row=nums.size();
        cout<<row;
        int x=0;
        int count=0;
        
        
        
        for(int i=0;i<nums.size();i++){
            x=x+nums[i];
            if(nums[i]==0) count++;
        }
        if(S>x) return 0;
        if((S+x)%2!=0) return 0;
        cout<<endl<<x;
        int tar=(S+x)/2;
        if(tar>x) return 0;
        int t[row+1][tar+1];
        t[0][0]=1;
        for(int i=1;i<row+1;i++){
            t[i][0]=1;
            
        }
        for(int i=1;i<tar+1;i++){
            t[0][i]=0;
        }
        for(int i=1;i<row+1;i++){
            for(int j=1;j<tar+1;j++){
                if(nums[i-1]==0) {
                    t[i][j]=t[i-1][j];
                }
               else if(j>=nums[i-1]){
                
                    t[i][j]=t[i-1][j]+t[i-1][j-nums[i-1]];
                    
                }
                
                else{
                    t[i][j]=t[i-1][j];
                }
                
                
            }
        }
        int result=1;
            if(count)   result=pow(2,count);   
          
            return result*t[row][tar];
 }