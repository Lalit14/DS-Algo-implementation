********time limit exceded****************
string Solution::solve(string A) {
    unordered_map<char, int> mp;
    queue<char> q;
    string ans;
    for (auto c : A)
    {
        mp[c]++;
        q.push(c);
        while (!q.empty() && mp[q.front()] > 1)   q.pop();
        if (!q.empty())                         ans.push_back(q.front());
        else                                    ans.push_back('#');
    }
    return ans;
}


*******optimal solution *****************

	string FirstNonRepeating(string A){
	string res="";
    queue<char>q;
    vector<int>m(256, 0);
    for(int i=0; i<A.size(); i++){
        m[A[i]]++;
        q.push(A[i]);
        while(!q.empty() && m[q.front()]>1)q.pop();
        res += !q.empty() ? q.front() : '#';
    }
    return res;
		}
