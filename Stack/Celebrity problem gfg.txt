**********brute force app*********************
 int celebrity(vector<vector<int> >& M, int N) {
        int arr[N];
        int brr[N];
        for(int i=0;i<N;i++) {
            arr[i]=0;
            brr[i]=0;
        }
        for(int i=0;i<N;i++){
         for(int j=0;j<N;j++){
            if(M[i][j]==1){
                brr[i]=1;
                arr[j]++;
            }
        }   
        }
        
        for(int i=0;i<N;i++){
            if(brr[i]==0 && arr[i]==N-1){
                return i;
            }
        }
        
        return -1;
        
    }
****O(n*n)
****************************optimal approach*******
    int celebrity(vector<vector<int> >& M, int N) {
       stack<int>st;
       for(int i=0;i<N;i++){
           st.push(i);
       }
       while(st.size()>=2){
           int i=st.top();
           st.pop();
           
           int j=st.top();
           st.pop();
           if(M[i][j]==1){
               st.push(j);
           }
           else{
               st.push(i);
           }
           
       }
       int p=st.top();
     for(int i=0;i<N;i++){
         if(i!=p){
             if(M[i][p]==0 || M[p][i]==1){
                 return -1;
             }
         }
     }
       
       return p;
    }
=====> O(n)