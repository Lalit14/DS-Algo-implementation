vector<long long int> productExceptSelf(vector<long long int>& nums, int n) {
   long long int sum=1;
   int  count=0;
   for(int i=0;i<n;i++){
   if(nums[i]!=0){    
       sum=sum*nums[i];
   }
  else  {
   count++;        
   
   }
   }
   
   if(count>1) {
        
        for(int i=0;i<n;i++) nums[i]=0;
       return nums;
   }
  
	if (count == 1) {
		for (int i = 0; i < n; i++) {
			if (nums[i] != 0) {
				nums[i] = 0;
			}
			else {
				nums[i] = sum;
			}
		}
		return nums;
	}
   
  
  for(int i=0;i<n;i++){
      nums[i]=sum/nums[i];
  } 
      return nums;
}
************************************************
void solve(int arr[], int n)
{
    // Initialize a variable to store the
    // total product of the array elements
    int prod = 1;
    for (int i = 0; i < n; i++)
        prod *= arr[i];

    // we know x/y mathematically is same
    // as x*(y to power -1)
    for (int i = 0; i < n; i++)
        cout << prod * (int)pow(
                           arr[i], -1)
             << " ";
}
