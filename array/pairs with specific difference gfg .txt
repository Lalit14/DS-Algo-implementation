#include <iostream>
using namespace std;
#include<bits/stdc++.h> 
int main() {
	int test;
	cin>>test;
	while(test--){
	    int N;
	    cin>>N;
	    int arr[N];
	    for(int i=0;i<N;i++){
	        cin>>arr[i];
	    }
	    int k;
	    cin>>k;
	    sort(arr,arr+N);

long long int sum=0;
int len=N-1;
            while(len>0){
	        if((arr[len]-arr[len-1])<k) {
	        
	           sum=sum+(arr[len-1]+arr[len]); 
	              len=len-2;
	        }
	        else{
	            len--;
	        }
	        
        	    }
	cout<<sum<<endl;
	}
	return 0;
}
T.C. -O(nlogn+n) -O(nlogn)
S.C. -O(1)



Input  : A[] = {3, 5, 10, 15, 17, 12, 9}, K = 4
Output : 62
Then disjoint pairs with difference less than K are,
(3, 5), (10, 12), (15, 17)	
max sum which we can get is 3 + 5 + 10 + 12 + 15 + 17 = 62
Note that an alternate way to form disjoint pairs is,
(3, 5), (9, 12), (15, 17), but this pairing produces less sum.

Input  : A[] = {5, 15, 10, 300}, k = 12
Output : 25