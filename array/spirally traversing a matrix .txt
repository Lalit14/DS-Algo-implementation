 vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
       int top=0;
       int down=r-1;
       int left=0;
       int right=c-1;
       int dr=0;
       vector<int>vec;  
       while(top<=down && left<=right){
           if(dr==0){
               for(int i=top;i<=right;i++){
                   vec.push_back(matrix[top][i]);
               }
               top++;
           }
           else if(dr==1){
               for(int i=top;i<=down;i++){
                   vec.push_back(matrix[i][right]);
               }
               right--;
           }
           else if(dr==2){
               for(int i=right;i>=left;i--){
                   vec.push_back(matrix[down][i]);
               }
               down--;
           }
           else if(dr==3){
               for(int i=down;i>=top;i--){
                   vec.push_back(matrix[i][left]);
               }
               left++;
           }
           
               dr=(dr+1)%4;
           
       }
       
       return vec;
       
    }