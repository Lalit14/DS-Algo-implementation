int start;
int search(int in[],int l,int r,int k)
{
    for(int j=l;j<=r;j++)
    {
        if(in[j]==k)
        return j;
    }
}
Node* postorder(int in[],int pre[],int ins,int ine){
 if(ins>ine)                                    //no nodes further
    return NULL;
    Node *root=new Node(pre[start++]);
    if(ins==ine)                            //end of tree --leaves 
    return root;
    int mid=search(in,ins,ine,root->data);
    root->left=postorder(in,pre,ins,mid-1);
    root->right=postorder(in,pre,mid+1,ine);
    return root;
}
Node* buildTree(int in[],int pre[], int n)
{
int ins=0;
int ine=n-1;
start=0;
// Node* a= postorder(in,pre,ins,ine);
// return a;
// or
return postorder(in,pre,ins,ine);
}