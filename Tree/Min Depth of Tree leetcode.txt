Brute Force method :

class Solution {
public:
    int minDepth(TreeNode* root) {
  int res=0;
            queue<TreeNode*>q;
        
        if(root) q.push(root);
    
        while(!q.empty()){
      q.push(root);
               res++;
         int l=q.size();   
        for(int i=0;i<l;i++){
          TreeNode* temp= q.front();
            
            if(!temp->left && !temp->right ) return res;
            if(temp->left) q.push(temp->left);
            if(temp->right) q.push(temp->right);
            q.pop();    
            
        }
        
  }
        return res;
    }
};

***********************Better method :***********************

class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root == nullptr){
            return 0;
        }
        
        int l = minDepth(root->left);
        int r = minDepth(root->right);
        
        if(l==0 or r==0){
            return max(l, r) +1;
        }
        
        return min(l, r) + 1;
        
    }
};