vector<TreeNode*>vec;
    void traversal(TreeNode* root){
        if(!root) return ;
        
        traversal(root->left);
        vec.push_back(root);
        traversal(root->right);
    }
   TreeNode* helper(int low,int high){
       if(low>high) return NULL;
       
       int mid=(low+high)/2;
      
        TreeNode* root=vec[mid];
       
       root->left=helper(low,mid-1);
        root->right=helper(mid+1,high);
        
        return root;  
    }
public:
    TreeNode* balanceBST(TreeNode* root) {
     
        traversal(root);
        int n=vec.size();
        return helper(0,n-1);
    }